-- Users table based on C-FM-MG-004 role matrix
CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  email TEXT UNIQUE NOT NULL,
  password_hash TEXT NOT NULL,
  name TEXT NOT NULL,
  department TEXT NOT NULL,
  role TEXT NOT NULL DEFAULT 'user',
  is_active INTEGER DEFAULT 1,
  last_login DATETIME,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_by INTEGER,
  FOREIGN KEY (created_by) REFERENCES users(id)
);

-- Insert default admin user
INSERT OR IGNORE INTO users (email, password_hash, name, department, role, is_active)
VALUES ('admin@1car.vn', '$2b$10$hash', 'System Administrator', 'Ban Gi√°m ƒë·ªëc', 'admin', 1);
K·ªãch B·∫£n C√†i ƒê·∫∑t (Setup Scripts)
V·ªã tr√≠: scripts/setup.js

JavaScript

/**
 * EDMS 1CAR Setup Script
 * Initialize database, create directories, install dependencies
 */

const fs = require('fs-extra');
const path = require('path');
const { execSync } = require('child_process');

async function setup() {
  console.log('üöÄ Setting up EDMS 1CAR...');
  
  // Create directories
  const dirs = [
    'database', 'database/backup', 'logs', 'uploads', 
    'uploads/documents', 'uploads/versions', 'uploads/temp'
  ];
  
  for (const dir of dirs) {
    await fs.ensureDir(dir);
    console.log(`‚úÖ Created directory: ${dir}`);
  }
  
  // Install backend dependencies
  console.log('üì¶ Installing backend dependencies...');
  execSync('cd src/backend && npm install', { stdio: 'inherit' });
  
  // Install frontend dependencies
  console.log('üì¶ Installing frontend dependencies...');
  execSync('cd src/frontend && npm install', { stdio: 'inherit' });
  
  // Initialize database
  console.log('üóÑÔ∏è Initializing database...');
  execSync('npm run migrate', { stdio: 'inherit' });
  
  console.log('üéâ EDMS 1CAR setup complete!');
  console.log('üëâ Run "npm run dev" to start development');
}

setup().catch(console.error);
Tu√¢n Th·ªß
H·ªá th·ªëng EDMS 1CAR ƒë∆∞·ª£c x√¢y d·ª±ng tu√¢n th·ªß c√°c quy tr√¨nh v√† ti√™u chu·∫©n sau:

C-PR-VM-001: Quy tr√¨nh qu·∫£n l√Ω phi√™n b·∫£n
C-PR-AR-001: Quy tr√¨nh l∆∞u tr·ªØ t√†i li·ªáu
C-PL-MG-005: Ch√≠nh s√°ch ph√¢n quy·ªÅn
IATF 16949: Ti√™u chu·∫©n ch·∫•t l∆∞·ª£ng
Chi Ti·∫øt C·∫•u Tr√∫c Tu√¢n Th·ªß EDMS 1CAR
Theo C-TD-MG-005 (Danh s√°ch m√£ chu·∫©n):

Lo·∫°i garage: C (Company)
Lo·∫°i t√†i li·ªáu: PR, WI, FM, TD, TR, RC, PL
Ph√≤ng ban: MG, CS, TE, QC, HR, AR
S·ªë th·ª© t·ª±: 001-999
Phi√™n b·∫£n: 01-99
Theo C-PR-VM-001 (Quy tr√¨nh qu·∫£n l√Ω phi√™n b·∫£n):

H·ªá th·ªëng ki·ªÉm so√°t phi√™n b·∫£n (Version control system)
Qu·∫£n l√Ω v√≤ng ƒë·ªùi t√†i li·ªáu (Document lifecycle management)
Quy tr√¨nh ph√™ duy·ªát (Approval workflow)
Qu·∫£n l√Ω l∆∞u tr·ªØ (Archive management)
Theo C-PL-MG-005 (Ch√≠nh s√°ch ph√¢n quy·ªÅn):

Ki·ªÉm so√°t truy c·∫≠p d·ª±a tr√™n vai tr√≤ (Role-based access control)
Quy·ªÅn h·∫°n d·ª±a tr√™n ph√≤ng ban (Department-based permissions)
C√°c m·ª©c ƒë·ªô b·∫£o m·∫≠t: R, C, I, P (Kh·∫£ nƒÉng l√† Read, Create, Implement, Publish ho·∫∑c c√°c m·ª©c ƒë·ªô kh√°c t√πy theo ƒë·ªãnh nghƒ©a c·ª• th·ªÉ c·ªßa 1CAR)
Tu√¢n th·ªß d·∫•u v·∫øt ki·ªÉm to√°n (Audit trail compliance)
Theo C-PR-AR-001 (Quy tr√¨nh l∆∞u tr·ªØ t√†i li·ªáu):

C·∫•u tr√∫c l∆∞u tr·ªØ t√†i li·ªáu (Document storage structure)
Ch√≠nh s√°ch l∆∞u gi·ªØ (Retention policies)
Th·ªß t·ª•c l∆∞u tr·ªØ (Archive procedures)
Qu·∫£n l√Ω h·ªßy t√†i li·ªáu (Disposal management)
H·ªó Tr·ª£
T√†i li·ªáu: /docs/
API Documentation: http://localhost:3000/api/docs
Logs H·ªá Th·ªëng: /logs/
Version: 1.0.0
K·∫øt Lu·∫≠n
C·∫•u tr√∫c folder v√† file n√†y ƒë·∫£m b·∫£o:

‚úÖ Tu√¢n th·ªß ƒë·∫ßy ƒë·ªß 9 t√†i li·ªáu EDMS 1CAR (√°m ch·ªâ c√°c t√†i li·ªáu quy ƒë·ªãnh n·ªôi b·ªô c·ªßa 1CAR)
‚úÖ Kh·∫£ nƒÉng m·ªü r·ªông (Scalability) cho 40 ng∆∞·ªùi d√πng, 14 ph√≤ng ban
‚úÖ Kh·∫£ nƒÉng b·∫£o tr√¨ (Maintainability) v·ªõi c·∫•u tr√∫c m√£ r√µ r√†ng
‚úÖ B·∫£o m·∫≠t (Security) v·ªõi x√°c th·ª±c & ·ªßy quy·ªÅn ph√π h·ª£p
‚úÖ Tu√¢n th·ªß (Compliance) v·ªõi ti√™u chu·∫©n IATF 16949
‚úÖ Hi·ªáu nƒÉng (Performance) v·ªõi c∆° s·ªü d·ªØ li·ªáu ƒë∆∞·ª£c t·ªëi ∆∞u h√≥a & caching (n·∫øu c√≥)
‚úÖ Gi√°m s√°t (Monitoring) v·ªõi ghi log to√†n di·ªán & d·∫•u v·∫øt ki·ªÉm to√°n
License
MIT License - 1CAR Development Team